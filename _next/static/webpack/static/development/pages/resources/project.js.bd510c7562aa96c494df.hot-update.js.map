{"version":3,"file":"static/webpack/static\\development\\pages\\resources\\project.js.bd510c7562aa96c494df.hot-update.js","sources":["webpack:///./client/components/[project]/mobile/index.js"],"sourcesContent":["// ------------------------------------------------------------------\r\n// | [general]\r\n// ------------------------------------------------------------------\r\n\r\nimport React, { useEffect } from 'react'\r\n\r\nimport ListComponent from './list'\r\nimport ContentComponent from './content'\r\n\r\nimport fetch from 'isomorphic-unfetch'\r\nimport { useFetch, useBoolean } from '@vorlefan/react-hooks'\r\nimport { stylesRoot } from './styles'\r\n\r\nimport { CircularProgress, IconButton } from '@material-ui/core'\r\n\r\nimport PageviewIcon from '@material-ui/icons/Pageview'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\n\r\n// ------------------------------------------------------------------\r\n// | [Component]\r\n// ------------------------------------------------------------------\r\n\r\nexport default function Component({ url, title }) {\r\n    const classes = stylesRoot()\r\n\r\n    const projectName = title\r\n\r\n    const docsContent = useFetch(\r\n        {\r\n            endpoint: `https://raw.githubusercontent.com/DaxSoft/${projectName}/master/readme.md`,\r\n            onSuccess: (response) => {},\r\n            onData: async (data) => {\r\n                return data.text()\r\n            },\r\n        },\r\n        'GET',\r\n        fetch\r\n    )\r\n\r\n    useEffect(() => {\r\n        if (!!projectName && !docsContent.data) {\r\n            docsContent.refresh.on()\r\n        }\r\n    }, [projectName])\r\n\r\n    const listToggle = useBoolean(false)\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {listToggle.isOn() && (\r\n                <ListComponent\r\n                    url={url}\r\n                    docsContent={docsContent}\r\n                    projectName={projectName}\r\n                />\r\n            )}\r\n            {docsContent.loading.isOn() ? (\r\n                <CircularProgress color=\"secondary\" />\r\n            ) : (\r\n                <ContentComponent docsContent={docsContent} />\r\n            )}\r\n            <IconButton\r\n                className={classes.listButton}\r\n                onClick={listToggle.toggle}\r\n            >\r\n                {listToggle.isOn() ? <CloseIcon /> : <PageviewIcon />}\r\n            </IconButton>\r\n        </div>\r\n    )\r\n}\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAWA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;A","sourceRoot":""}