{"version":3,"file":"static/webpack/static\\development\\pages\\resources.js.0aa3531232e15f359387.hot-update.js","sources":["webpack:///./client/components/resources/mobile/index.js"],"sourcesContent":["// ------------------------------------------------------------------\r\n// | [general]\r\n// ------------------------------------------------------------------\r\n\r\nimport React from 'react'\r\nimport fetch from 'isomorphic-unfetch'\r\nimport { useFetch, useLocalStorage } from '@vorlefan/react-hooks'\r\nimport { useRouter } from 'next/router'\r\n\r\nimport { Typography, CircularProgress } from '@material-ui/core'\r\n\r\nimport { stylesRoot } from './styles'\r\n\r\nimport GithubCard from '../../@common/github_card'\r\n\r\nfunction filterGithubProjects({ description }) {\r\n    return /(\\#doc(s)?\\s?)/gim.test(description)\r\n}\r\n\r\n// ------------------------------------------------------------------\r\n// | [Component]\r\n// ------------------------------------------------------------------\r\n\r\nexport default function Component({}) {\r\n    const classes = stylesRoot()\r\n\r\n    const cacheResources = useLocalStorage('resources', [])\r\n\r\n    const repos = useFetch(\r\n        {\r\n            endpoint: 'https://api.github.com/users/DaxSoft/repos', // daxsoft.github.io\r\n            onSuccess: (data) => {\r\n                cacheResources.set(data)\r\n            },\r\n            onError: (err) => {\r\n                issues.data = cacheResources.get()\r\n            },\r\n            startInit: cacheResources.get(),\r\n        },\r\n        'GET',\r\n        fetch\r\n    )\r\n\r\n    const router = useRouter()\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Typography variant=\"h3\" className={classes.title}>\r\n                Repositories\r\n            </Typography>\r\n            <Typography variant=\"body1\" className={classes.description}>\r\n                This pages makes a request from Github's API. <br />\r\n                Where it gets the repositories from my account and display here.{' '}\r\n                <br />\r\n                It checks if exists a documentation available from the\r\n                description of the repo. <br />\r\n                The description needs to have '#docs'.\r\n            </Typography>\r\n            <Typography variant=\"button\" className={classes.label}>\r\n                Click upon the repository to go to the documentation!\r\n            </Typography>\r\n            <div className={classes.container}>\r\n                {repos.loading.isOn() ? (\r\n                    <CircularProgress\r\n                        color=\"secondary\"\r\n                        style={{ justifySelf: 'center', alignSelf: 'center' }}\r\n                    />\r\n                ) : (\r\n                    Array.isArray(repos.data) &&\r\n                    repos.data.length > 0 &&\r\n                    repos.data.map((value, key) => {\r\n                        if (!filterGithubProjects(value)) return\r\n                        return (\r\n                            <GithubCard\r\n                                key={key}\r\n                                title={value.name}\r\n                                href={`/resources/${value.name}`}\r\n                                description={value.description}\r\n                                stars={value.stargazers_count}\r\n                                fork={value.forks_count}\r\n                                data={value}\r\n                            />\r\n                        )\r\n                    })\r\n                )}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AAEA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAcA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAKA;;;;A","sourceRoot":""}